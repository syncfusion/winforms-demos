#region Copyright Syncfusion® Inc. 2001-2025.
// Copyright Syncfusion® Inc. 2001-2025. All rights reserved.
// Use of this code is subject to the terms of our license.
// A copy of the current license can be obtained at any time by e-mailing
// licensing@syncfusion.com. Any infringement will be prosecuted under
// applicable laws. 
#endregion
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Syncfusion.Windows.Forms.Diagram.Samples.gov.weather.graphical {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ndfdXMLBinding", Namespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
    public partial class ndfdXML : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NDFDgenOperationCompleted;
        
        private System.Threading.SendOrPostCallback NDFDgenByDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback NDFDgenLatLonListOperationCompleted;
        
        private System.Threading.SendOrPostCallback NDFDgenByDayLatLonListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GmlLatLonListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GmlTimeSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LatLonListSubgridOperationCompleted;
        
        private System.Threading.SendOrPostCallback LatLonListLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback LatLonListZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LatLonListSquareOperationCompleted;
        
        private System.Threading.SendOrPostCallback CornerPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LatLonListCityNamesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ndfdXML() {
            this.Url = global::Syncfusion.Windows.Forms.Diagram.Samples.Properties.Settings.Default.Syncfusion_Windows_Forms_Diagram_Samples_gov_weather_graphical_ndfdXML;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NDFDgenCompletedEventHandler NDFDgenCompleted;
        
        /// <remarks/>
        public event NDFDgenByDayCompletedEventHandler NDFDgenByDayCompleted;
        
        /// <remarks/>
        public event NDFDgenLatLonListCompletedEventHandler NDFDgenLatLonListCompleted;
        
        /// <remarks/>
        public event NDFDgenByDayLatLonListCompletedEventHandler NDFDgenByDayLatLonListCompleted;
        
        /// <remarks/>
        public event GmlLatLonListCompletedEventHandler GmlLatLonListCompleted;
        
        /// <remarks/>
        public event GmlTimeSeriesCompletedEventHandler GmlTimeSeriesCompleted;
        
        /// <remarks/>
        public event LatLonListSubgridCompletedEventHandler LatLonListSubgridCompleted;
        
        /// <remarks/>
        public event LatLonListLineCompletedEventHandler LatLonListLineCompleted;
        
        /// <remarks/>
        public event LatLonListZipCodeCompletedEventHandler LatLonListZipCodeCompleted;
        
        /// <remarks/>
        public event LatLonListSquareCompletedEventHandler LatLonListSquareCompleted;
        
        /// <remarks/>
        public event CornerPointsCompletedEventHandler CornerPointsCompleted;
        
        /// <remarks/>
        public event LatLonListCityNamesCompletedEventHandler LatLonListCityNamesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgen", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwmlOut")]
        public string NDFDgen(decimal latitude, decimal longitude, productType product, System.DateTime startTime, System.DateTime endTime, unitType Unit, weatherParametersType weatherParameters) {
            object[] results = this.Invoke("NDFDgen", new object[] {
                        latitude,
                        longitude,
                        product,
                        startTime,
                        endTime,
                        Unit,
                        weatherParameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NDFDgenAsync(decimal latitude, decimal longitude, productType product, System.DateTime startTime, System.DateTime endTime, unitType Unit, weatherParametersType weatherParameters) {
            this.NDFDgenAsync(latitude, longitude, product, startTime, endTime, Unit, weatherParameters, null);
        }
        
        /// <remarks/>
        public void NDFDgenAsync(decimal latitude, decimal longitude, productType product, System.DateTime startTime, System.DateTime endTime, unitType Unit, weatherParametersType weatherParameters, object userState) {
            if ((this.NDFDgenOperationCompleted == null)) {
                this.NDFDgenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNDFDgenOperationCompleted);
            }
            this.InvokeAsync("NDFDgen", new object[] {
                        latitude,
                        longitude,
                        product,
                        startTime,
                        endTime,
                        Unit,
                        weatherParameters}, this.NDFDgenOperationCompleted, userState);
        }
        
        private void OnNDFDgenOperationCompleted(object arg) {
            if ((this.NDFDgenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NDFDgenCompleted(this, new NDFDgenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenByDay", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwmlByDayOut")]
        public string NDFDgenByDay(decimal latitude, decimal longitude, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string numDays, unitType Unit, formatType format) {
            object[] results = this.Invoke("NDFDgenByDay", new object[] {
                        latitude,
                        longitude,
                        startDate,
                        numDays,
                        Unit,
                        format});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NDFDgenByDayAsync(decimal latitude, decimal longitude, System.DateTime startDate, string numDays, unitType Unit, formatType format) {
            this.NDFDgenByDayAsync(latitude, longitude, startDate, numDays, Unit, format, null);
        }
        
        /// <remarks/>
        public void NDFDgenByDayAsync(decimal latitude, decimal longitude, System.DateTime startDate, string numDays, unitType Unit, formatType format, object userState) {
            if ((this.NDFDgenByDayOperationCompleted == null)) {
                this.NDFDgenByDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNDFDgenByDayOperationCompleted);
            }
            this.InvokeAsync("NDFDgenByDay", new object[] {
                        latitude,
                        longitude,
                        startDate,
                        numDays,
                        Unit,
                        format}, this.NDFDgenByDayOperationCompleted, userState);
        }
        
        private void OnNDFDgenByDayOperationCompleted(object arg) {
            if ((this.NDFDgenByDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NDFDgenByDayCompleted(this, new NDFDgenByDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenLatLonList", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwmlOut")]
        public string NDFDgenLatLonList(string listLatLon, productType product, System.DateTime startTime, System.DateTime endTime, unitType Unit, weatherParametersType weatherParameters) {
            object[] results = this.Invoke("NDFDgenLatLonList", new object[] {
                        listLatLon,
                        product,
                        startTime,
                        endTime,
                        Unit,
                        weatherParameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NDFDgenLatLonListAsync(string listLatLon, productType product, System.DateTime startTime, System.DateTime endTime, unitType Unit, weatherParametersType weatherParameters) {
            this.NDFDgenLatLonListAsync(listLatLon, product, startTime, endTime, Unit, weatherParameters, null);
        }
        
        /// <remarks/>
        public void NDFDgenLatLonListAsync(string listLatLon, productType product, System.DateTime startTime, System.DateTime endTime, unitType Unit, weatherParametersType weatherParameters, object userState) {
            if ((this.NDFDgenLatLonListOperationCompleted == null)) {
                this.NDFDgenLatLonListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNDFDgenLatLonListOperationCompleted);
            }
            this.InvokeAsync("NDFDgenLatLonList", new object[] {
                        listLatLon,
                        product,
                        startTime,
                        endTime,
                        Unit,
                        weatherParameters}, this.NDFDgenLatLonListOperationCompleted, userState);
        }
        
        private void OnNDFDgenLatLonListOperationCompleted(object arg) {
            if ((this.NDFDgenLatLonListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NDFDgenLatLonListCompleted(this, new NDFDgenLatLonListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenByDayLatLonLis" +
            "t", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwmlByDayOut")]
        public string NDFDgenByDayLatLonList(string listLatLon, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string numDays, unitType Unit, formatType format) {
            object[] results = this.Invoke("NDFDgenByDayLatLonList", new object[] {
                        listLatLon,
                        startDate,
                        numDays,
                        Unit,
                        format});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NDFDgenByDayLatLonListAsync(string listLatLon, System.DateTime startDate, string numDays, unitType Unit, formatType format) {
            this.NDFDgenByDayLatLonListAsync(listLatLon, startDate, numDays, Unit, format, null);
        }
        
        /// <remarks/>
        public void NDFDgenByDayLatLonListAsync(string listLatLon, System.DateTime startDate, string numDays, unitType Unit, formatType format, object userState) {
            if ((this.NDFDgenByDayLatLonListOperationCompleted == null)) {
                this.NDFDgenByDayLatLonListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNDFDgenByDayLatLonListOperationCompleted);
            }
            this.InvokeAsync("NDFDgenByDayLatLonList", new object[] {
                        listLatLon,
                        startDate,
                        numDays,
                        Unit,
                        format}, this.NDFDgenByDayLatLonListOperationCompleted, userState);
        }
        
        private void OnNDFDgenByDayLatLonListOperationCompleted(object arg) {
            if ((this.NDFDgenByDayLatLonListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NDFDgenByDayLatLonListCompleted(this, new NDFDgenByDayLatLonListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#GmlLatLonList", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwGmlOut")]
        public string GmlLatLonList(string listLatLon, System.DateTime requestedTime, featureTypeType featureType, weatherParametersType weatherParameters) {
            object[] results = this.Invoke("GmlLatLonList", new object[] {
                        listLatLon,
                        requestedTime,
                        featureType,
                        weatherParameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GmlLatLonListAsync(string listLatLon, System.DateTime requestedTime, featureTypeType featureType, weatherParametersType weatherParameters) {
            this.GmlLatLonListAsync(listLatLon, requestedTime, featureType, weatherParameters, null);
        }
        
        /// <remarks/>
        public void GmlLatLonListAsync(string listLatLon, System.DateTime requestedTime, featureTypeType featureType, weatherParametersType weatherParameters, object userState) {
            if ((this.GmlLatLonListOperationCompleted == null)) {
                this.GmlLatLonListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGmlLatLonListOperationCompleted);
            }
            this.InvokeAsync("GmlLatLonList", new object[] {
                        listLatLon,
                        requestedTime,
                        featureType,
                        weatherParameters}, this.GmlLatLonListOperationCompleted, userState);
        }
        
        private void OnGmlLatLonListOperationCompleted(object arg) {
            if ((this.GmlLatLonListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GmlLatLonListCompleted(this, new GmlLatLonListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#GmlTimeSeries", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwGmlOut")]
        public string GmlTimeSeries(string listLatLon, System.DateTime startTime, System.DateTime endTime, compTypeType compType, featureTypeType featureType, string propertyName) {
            object[] results = this.Invoke("GmlTimeSeries", new object[] {
                        listLatLon,
                        startTime,
                        endTime,
                        compType,
                        featureType,
                        propertyName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GmlTimeSeriesAsync(string listLatLon, System.DateTime startTime, System.DateTime endTime, compTypeType compType, featureTypeType featureType, string propertyName) {
            this.GmlTimeSeriesAsync(listLatLon, startTime, endTime, compType, featureType, propertyName, null);
        }
        
        /// <remarks/>
        public void GmlTimeSeriesAsync(string listLatLon, System.DateTime startTime, System.DateTime endTime, compTypeType compType, featureTypeType featureType, string propertyName, object userState) {
            if ((this.GmlTimeSeriesOperationCompleted == null)) {
                this.GmlTimeSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGmlTimeSeriesOperationCompleted);
            }
            this.InvokeAsync("GmlTimeSeries", new object[] {
                        listLatLon,
                        startTime,
                        endTime,
                        compType,
                        featureType,
                        propertyName}, this.GmlTimeSeriesOperationCompleted, userState);
        }
        
        private void OnGmlTimeSeriesOperationCompleted(object arg) {
            if ((this.GmlTimeSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GmlTimeSeriesCompleted(this, new GmlTimeSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListSubgrid", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("listLatLonOut")]
        public string LatLonListSubgrid(decimal lowerLeftLatitude, decimal lowerLeftLongitude, decimal upperRightLatitude, decimal upperRightLongitude, decimal resolution) {
            object[] results = this.Invoke("LatLonListSubgrid", new object[] {
                        lowerLeftLatitude,
                        lowerLeftLongitude,
                        upperRightLatitude,
                        upperRightLongitude,
                        resolution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LatLonListSubgridAsync(decimal lowerLeftLatitude, decimal lowerLeftLongitude, decimal upperRightLatitude, decimal upperRightLongitude, decimal resolution) {
            this.LatLonListSubgridAsync(lowerLeftLatitude, lowerLeftLongitude, upperRightLatitude, upperRightLongitude, resolution, null);
        }
        
        /// <remarks/>
        public void LatLonListSubgridAsync(decimal lowerLeftLatitude, decimal lowerLeftLongitude, decimal upperRightLatitude, decimal upperRightLongitude, decimal resolution, object userState) {
            if ((this.LatLonListSubgridOperationCompleted == null)) {
                this.LatLonListSubgridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatLonListSubgridOperationCompleted);
            }
            this.InvokeAsync("LatLonListSubgrid", new object[] {
                        lowerLeftLatitude,
                        lowerLeftLongitude,
                        upperRightLatitude,
                        upperRightLongitude,
                        resolution}, this.LatLonListSubgridOperationCompleted, userState);
        }
        
        private void OnLatLonListSubgridOperationCompleted(object arg) {
            if ((this.LatLonListSubgridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LatLonListSubgridCompleted(this, new LatLonListSubgridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListLine", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("listLatLonOut")]
        public string LatLonListLine(decimal endPoint1Lat, decimal endPoint1Lon, decimal endPoint2Lat, decimal endPoint2Lon) {
            object[] results = this.Invoke("LatLonListLine", new object[] {
                        endPoint1Lat,
                        endPoint1Lon,
                        endPoint2Lat,
                        endPoint2Lon});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LatLonListLineAsync(decimal endPoint1Lat, decimal endPoint1Lon, decimal endPoint2Lat, decimal endPoint2Lon) {
            this.LatLonListLineAsync(endPoint1Lat, endPoint1Lon, endPoint2Lat, endPoint2Lon, null);
        }
        
        /// <remarks/>
        public void LatLonListLineAsync(decimal endPoint1Lat, decimal endPoint1Lon, decimal endPoint2Lat, decimal endPoint2Lon, object userState) {
            if ((this.LatLonListLineOperationCompleted == null)) {
                this.LatLonListLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatLonListLineOperationCompleted);
            }
            this.InvokeAsync("LatLonListLine", new object[] {
                        endPoint1Lat,
                        endPoint1Lon,
                        endPoint2Lat,
                        endPoint2Lon}, this.LatLonListLineOperationCompleted, userState);
        }
        
        private void OnLatLonListLineOperationCompleted(object arg) {
            if ((this.LatLonListLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LatLonListLineCompleted(this, new LatLonListLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListZipCode", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("listLatLonOut")]
        public string LatLonListZipCode(string zipCodeList) {
            object[] results = this.Invoke("LatLonListZipCode", new object[] {
                        zipCodeList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LatLonListZipCodeAsync(string zipCodeList) {
            this.LatLonListZipCodeAsync(zipCodeList, null);
        }
        
        /// <remarks/>
        public void LatLonListZipCodeAsync(string zipCodeList, object userState) {
            if ((this.LatLonListZipCodeOperationCompleted == null)) {
                this.LatLonListZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatLonListZipCodeOperationCompleted);
            }
            this.InvokeAsync("LatLonListZipCode", new object[] {
                        zipCodeList}, this.LatLonListZipCodeOperationCompleted, userState);
        }
        
        private void OnLatLonListZipCodeOperationCompleted(object arg) {
            if ((this.LatLonListZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LatLonListZipCodeCompleted(this, new LatLonListZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListSquare", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("listLatLonOut")]
        public string LatLonListSquare(decimal centerPointLat, decimal centerPointLon, decimal distanceLat, decimal distanceLon, decimal resolution) {
            object[] results = this.Invoke("LatLonListSquare", new object[] {
                        centerPointLat,
                        centerPointLon,
                        distanceLat,
                        distanceLon,
                        resolution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LatLonListSquareAsync(decimal centerPointLat, decimal centerPointLon, decimal distanceLat, decimal distanceLon, decimal resolution) {
            this.LatLonListSquareAsync(centerPointLat, centerPointLon, distanceLat, distanceLon, resolution, null);
        }
        
        /// <remarks/>
        public void LatLonListSquareAsync(decimal centerPointLat, decimal centerPointLon, decimal distanceLat, decimal distanceLon, decimal resolution, object userState) {
            if ((this.LatLonListSquareOperationCompleted == null)) {
                this.LatLonListSquareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatLonListSquareOperationCompleted);
            }
            this.InvokeAsync("LatLonListSquare", new object[] {
                        centerPointLat,
                        centerPointLon,
                        distanceLat,
                        distanceLon,
                        resolution}, this.LatLonListSquareOperationCompleted, userState);
        }
        
        private void OnLatLonListSquareOperationCompleted(object arg) {
            if ((this.LatLonListSquareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LatLonListSquareCompleted(this, new LatLonListSquareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#CornerPoints", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("listLatLonOut")]
        public string CornerPoints(sectorType sector) {
            object[] results = this.Invoke("CornerPoints", new object[] {
                        sector});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CornerPointsAsync(sectorType sector) {
            this.CornerPointsAsync(sector, null);
        }
        
        /// <remarks/>
        public void CornerPointsAsync(sectorType sector, object userState) {
            if ((this.CornerPointsOperationCompleted == null)) {
                this.CornerPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCornerPointsOperationCompleted);
            }
            this.InvokeAsync("CornerPoints", new object[] {
                        sector}, this.CornerPointsOperationCompleted, userState);
        }
        
        private void OnCornerPointsOperationCompleted(object arg) {
            if ((this.CornerPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CornerPointsCompleted(this, new CornerPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListCityNames", RequestNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("listCityNamesOut")]
        public string LatLonListCityNames([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string displayLevel) {
            object[] results = this.Invoke("LatLonListCityNames", new object[] {
                        displayLevel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LatLonListCityNamesAsync(string displayLevel) {
            this.LatLonListCityNamesAsync(displayLevel, null);
        }
        
        /// <remarks/>
        public void LatLonListCityNamesAsync(string displayLevel, object userState) {
            if ((this.LatLonListCityNamesOperationCompleted == null)) {
                this.LatLonListCityNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatLonListCityNamesOperationCompleted);
            }
            this.InvokeAsync("LatLonListCityNames", new object[] {
                        displayLevel}, this.LatLonListCityNamesOperationCompleted, userState);
        }
        
        private void OnLatLonListCityNamesOperationCompleted(object arg) {
            if ((this.LatLonListCityNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LatLonListCityNamesCompleted(this, new LatLonListCityNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")]
    public enum productType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapEnumAttribute("time-series")]
        timeseries,
        
        /// <remarks/>
        glance,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")]
    public enum unitType {
        
        /// <remarks/>
        e,
        
        /// <remarks/>
        m,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")]
    public partial class weatherParametersType {
        
        private bool maxtField;
        
        private bool mintField;
        
        private bool tempField;
        
        private bool dewField;
        
        private bool pop12Field;
        
        private bool qpfField;
        
        private bool skyField;
        
        private bool snowField;
        
        private bool wspdField;
        
        private bool wdirField;
        
        private bool wxField;
        
        private bool wavehField;
        
        private bool iconsField;
        
        private bool rhField;
        
        private bool apptField;
        
        private bool incw34Field;
        
        private bool incw50Field;
        
        private bool incw64Field;
        
        private bool cumw34Field;
        
        private bool cumw50Field;
        
        private bool cumw64Field;
        
        private bool critfireoField;
        
        private bool dryfireoField;
        
        private bool conhazoField;
        
        private bool ptornadoField;
        
        private bool phailField;
        
        private bool ptstmwindsField;
        
        private bool pxtornadoField;
        
        private bool pxhailField;
        
        private bool pxtstmwindsField;
        
        private bool ptotsvrtstmField;
        
        private bool pxtotsvrtstmField;
        
        private bool tmpabv14dField;
        
        private bool tmpblw14dField;
        
        private bool tmpabv30dField;
        
        private bool tmpblw30dField;
        
        private bool tmpabv90dField;
        
        private bool tmpblw90dField;
        
        private bool prcpabv14dField;
        
        private bool prcpblw14dField;
        
        private bool prcpabv30dField;
        
        private bool prcpblw30dField;
        
        private bool prcpabv90dField;
        
        private bool prcpblw90dField;
        
        private bool precipa_rField;
        
        private bool sky_rField;
        
        private bool td_rField;
        
        private bool temp_rField;
        
        private bool wdir_rField;
        
        private bool wspd_rField;
        
        private bool wwaField;
        
        private bool tstmprbField;
        
        private bool tstmcatField;
        
        private bool wgustField;
        
        private bool iceaccumField;
        
        private bool maxrhField;
        
        private bool minrhField;
        
        /// <remarks/>
        public bool maxt {
            get {
                return this.maxtField;
            }
            set {
                this.maxtField = value;
            }
        }
        
        /// <remarks/>
        public bool mint {
            get {
                return this.mintField;
            }
            set {
                this.mintField = value;
            }
        }
        
        /// <remarks/>
        public bool temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        public bool dew {
            get {
                return this.dewField;
            }
            set {
                this.dewField = value;
            }
        }
        
        /// <remarks/>
        public bool pop12 {
            get {
                return this.pop12Field;
            }
            set {
                this.pop12Field = value;
            }
        }
        
        /// <remarks/>
        public bool qpf {
            get {
                return this.qpfField;
            }
            set {
                this.qpfField = value;
            }
        }
        
        /// <remarks/>
        public bool sky {
            get {
                return this.skyField;
            }
            set {
                this.skyField = value;
            }
        }
        
        /// <remarks/>
        public bool snow {
            get {
                return this.snowField;
            }
            set {
                this.snowField = value;
            }
        }
        
        /// <remarks/>
        public bool wspd {
            get {
                return this.wspdField;
            }
            set {
                this.wspdField = value;
            }
        }
        
        /// <remarks/>
        public bool wdir {
            get {
                return this.wdirField;
            }
            set {
                this.wdirField = value;
            }
        }
        
        /// <remarks/>
        public bool wx {
            get {
                return this.wxField;
            }
            set {
                this.wxField = value;
            }
        }
        
        /// <remarks/>
        public bool waveh {
            get {
                return this.wavehField;
            }
            set {
                this.wavehField = value;
            }
        }
        
        /// <remarks/>
        public bool icons {
            get {
                return this.iconsField;
            }
            set {
                this.iconsField = value;
            }
        }
        
        /// <remarks/>
        public bool rh {
            get {
                return this.rhField;
            }
            set {
                this.rhField = value;
            }
        }
        
        /// <remarks/>
        public bool appt {
            get {
                return this.apptField;
            }
            set {
                this.apptField = value;
            }
        }
        
        /// <remarks/>
        public bool incw34 {
            get {
                return this.incw34Field;
            }
            set {
                this.incw34Field = value;
            }
        }
        
        /// <remarks/>
        public bool incw50 {
            get {
                return this.incw50Field;
            }
            set {
                this.incw50Field = value;
            }
        }
        
        /// <remarks/>
        public bool incw64 {
            get {
                return this.incw64Field;
            }
            set {
                this.incw64Field = value;
            }
        }
        
        /// <remarks/>
        public bool cumw34 {
            get {
                return this.cumw34Field;
            }
            set {
                this.cumw34Field = value;
            }
        }
        
        /// <remarks/>
        public bool cumw50 {
            get {
                return this.cumw50Field;
            }
            set {
                this.cumw50Field = value;
            }
        }
        
        /// <remarks/>
        public bool cumw64 {
            get {
                return this.cumw64Field;
            }
            set {
                this.cumw64Field = value;
            }
        }
        
        /// <remarks/>
        public bool critfireo {
            get {
                return this.critfireoField;
            }
            set {
                this.critfireoField = value;
            }
        }
        
        /// <remarks/>
        public bool dryfireo {
            get {
                return this.dryfireoField;
            }
            set {
                this.dryfireoField = value;
            }
        }
        
        /// <remarks/>
        public bool conhazo {
            get {
                return this.conhazoField;
            }
            set {
                this.conhazoField = value;
            }
        }
        
        /// <remarks/>
        public bool ptornado {
            get {
                return this.ptornadoField;
            }
            set {
                this.ptornadoField = value;
            }
        }
        
        /// <remarks/>
        public bool phail {
            get {
                return this.phailField;
            }
            set {
                this.phailField = value;
            }
        }
        
        /// <remarks/>
        public bool ptstmwinds {
            get {
                return this.ptstmwindsField;
            }
            set {
                this.ptstmwindsField = value;
            }
        }
        
        /// <remarks/>
        public bool pxtornado {
            get {
                return this.pxtornadoField;
            }
            set {
                this.pxtornadoField = value;
            }
        }
        
        /// <remarks/>
        public bool pxhail {
            get {
                return this.pxhailField;
            }
            set {
                this.pxhailField = value;
            }
        }
        
        /// <remarks/>
        public bool pxtstmwinds {
            get {
                return this.pxtstmwindsField;
            }
            set {
                this.pxtstmwindsField = value;
            }
        }
        
        /// <remarks/>
        public bool ptotsvrtstm {
            get {
                return this.ptotsvrtstmField;
            }
            set {
                this.ptotsvrtstmField = value;
            }
        }
        
        /// <remarks/>
        public bool pxtotsvrtstm {
            get {
                return this.pxtotsvrtstmField;
            }
            set {
                this.pxtotsvrtstmField = value;
            }
        }
        
        /// <remarks/>
        public bool tmpabv14d {
            get {
                return this.tmpabv14dField;
            }
            set {
                this.tmpabv14dField = value;
            }
        }
        
        /// <remarks/>
        public bool tmpblw14d {
            get {
                return this.tmpblw14dField;
            }
            set {
                this.tmpblw14dField = value;
            }
        }
        
        /// <remarks/>
        public bool tmpabv30d {
            get {
                return this.tmpabv30dField;
            }
            set {
                this.tmpabv30dField = value;
            }
        }
        
        /// <remarks/>
        public bool tmpblw30d {
            get {
                return this.tmpblw30dField;
            }
            set {
                this.tmpblw30dField = value;
            }
        }
        
        /// <remarks/>
        public bool tmpabv90d {
            get {
                return this.tmpabv90dField;
            }
            set {
                this.tmpabv90dField = value;
            }
        }
        
        /// <remarks/>
        public bool tmpblw90d {
            get {
                return this.tmpblw90dField;
            }
            set {
                this.tmpblw90dField = value;
            }
        }
        
        /// <remarks/>
        public bool prcpabv14d {
            get {
                return this.prcpabv14dField;
            }
            set {
                this.prcpabv14dField = value;
            }
        }
        
        /// <remarks/>
        public bool prcpblw14d {
            get {
                return this.prcpblw14dField;
            }
            set {
                this.prcpblw14dField = value;
            }
        }
        
        /// <remarks/>
        public bool prcpabv30d {
            get {
                return this.prcpabv30dField;
            }
            set {
                this.prcpabv30dField = value;
            }
        }
        
        /// <remarks/>
        public bool prcpblw30d {
            get {
                return this.prcpblw30dField;
            }
            set {
                this.prcpblw30dField = value;
            }
        }
        
        /// <remarks/>
        public bool prcpabv90d {
            get {
                return this.prcpabv90dField;
            }
            set {
                this.prcpabv90dField = value;
            }
        }
        
        /// <remarks/>
        public bool prcpblw90d {
            get {
                return this.prcpblw90dField;
            }
            set {
                this.prcpblw90dField = value;
            }
        }
        
        /// <remarks/>
        public bool precipa_r {
            get {
                return this.precipa_rField;
            }
            set {
                this.precipa_rField = value;
            }
        }
        
        /// <remarks/>
        public bool sky_r {
            get {
                return this.sky_rField;
            }
            set {
                this.sky_rField = value;
            }
        }
        
        /// <remarks/>
        public bool td_r {
            get {
                return this.td_rField;
            }
            set {
                this.td_rField = value;
            }
        }
        
        /// <remarks/>
        public bool temp_r {
            get {
                return this.temp_rField;
            }
            set {
                this.temp_rField = value;
            }
        }
        
        /// <remarks/>
        public bool wdir_r {
            get {
                return this.wdir_rField;
            }
            set {
                this.wdir_rField = value;
            }
        }
        
        /// <remarks/>
        public bool wspd_r {
            get {
                return this.wspd_rField;
            }
            set {
                this.wspd_rField = value;
            }
        }
        
        /// <remarks/>
        public bool wwa {
            get {
                return this.wwaField;
            }
            set {
                this.wwaField = value;
            }
        }
        
        /// <remarks/>
        public bool tstmprb {
            get {
                return this.tstmprbField;
            }
            set {
                this.tstmprbField = value;
            }
        }
        
        /// <remarks/>
        public bool tstmcat {
            get {
                return this.tstmcatField;
            }
            set {
                this.tstmcatField = value;
            }
        }
        
        /// <remarks/>
        public bool wgust {
            get {
                return this.wgustField;
            }
            set {
                this.wgustField = value;
            }
        }
        
        /// <remarks/>
        public bool iceaccum {
            get {
                return this.iceaccumField;
            }
            set {
                this.iceaccumField = value;
            }
        }
        
        /// <remarks/>
        public bool maxrh {
            get {
                return this.maxrhField;
            }
            set {
                this.maxrhField = value;
            }
        }
        
        /// <remarks/>
        public bool minrh {
            get {
                return this.minrhField;
            }
            set {
                this.minrhField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")]
    public enum formatType {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapEnumAttribute("24 hourly")]
        Item24hourly,
        
        /// <remarks/>
        [System.Xml.Serialization.SoapEnumAttribute("12 hourly")]
        Item12hourly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")]
    public enum featureTypeType {
        
        /// <remarks/>
        Forecast_Gml2Point,
        
        /// <remarks/>
        Forecast_Gml2AllWx,
        
        /// <remarks/>
        Forecast_GmlsfPoint,
        
        /// <remarks/>
        Forecast_GmlObs,
        
        /// <remarks/>
        NdfdMultiPointCoverage,
        
        /// <remarks/>
        Ndfd_KmlPoint,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")]
    public enum compTypeType {
        
        /// <remarks/>
        IsEqual,
        
        /// <remarks/>
        Between,
        
        /// <remarks/>
        GreaterThan,
        
        /// <remarks/>
        GreaterThanEqualTo,
        
        /// <remarks/>
        LessThan,
        
        /// <remarks/>
        LessThanEqualTo,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")]
    public enum sectorType {
        
        /// <remarks/>
        conus,
        
        /// <remarks/>
        nhemi,
        
        /// <remarks/>
        alaska,
        
        /// <remarks/>
        guam,
        
        /// <remarks/>
        hawaii,
        
        /// <remarks/>
        puertori,
        
        /// <remarks/>
        npacocn,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NDFDgenCompletedEventHandler(object sender, NDFDgenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NDFDgenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NDFDgenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NDFDgenByDayCompletedEventHandler(object sender, NDFDgenByDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NDFDgenByDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NDFDgenByDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NDFDgenLatLonListCompletedEventHandler(object sender, NDFDgenLatLonListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NDFDgenLatLonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NDFDgenLatLonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NDFDgenByDayLatLonListCompletedEventHandler(object sender, NDFDgenByDayLatLonListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NDFDgenByDayLatLonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NDFDgenByDayLatLonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GmlLatLonListCompletedEventHandler(object sender, GmlLatLonListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GmlLatLonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GmlLatLonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GmlTimeSeriesCompletedEventHandler(object sender, GmlTimeSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GmlTimeSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GmlTimeSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LatLonListSubgridCompletedEventHandler(object sender, LatLonListSubgridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LatLonListSubgridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LatLonListSubgridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LatLonListLineCompletedEventHandler(object sender, LatLonListLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LatLonListLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LatLonListLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LatLonListZipCodeCompletedEventHandler(object sender, LatLonListZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LatLonListZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LatLonListZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LatLonListSquareCompletedEventHandler(object sender, LatLonListSquareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LatLonListSquareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LatLonListSquareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CornerPointsCompletedEventHandler(object sender, CornerPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CornerPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CornerPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LatLonListCityNamesCompletedEventHandler(object sender, LatLonListCityNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LatLonListCityNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LatLonListCityNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591