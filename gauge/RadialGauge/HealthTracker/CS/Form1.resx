<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAABMLAAATCwAAAAAAAAAA
        AAB9Nim7fTYp2302Kdl9NinZfTYp2302KcR9NikzfTYps302Kdx9NinZfTYp2X02Kdx9Nim0fTYpLn02
        Kb19NinbfTYp2X02Kdl9NincfTYpq302KQx9NikAAAAAAAAAAAB9NinbfTYp/302Kf99Nin/fTYp/302
        KeZ9Nik8fTYp0302Kf99Nin/fTYp/302Kf99NinTfTYpNn02Kd59Nin/fTYp/302Kf99Nin/fTYpyX02
        KQ99NikAAAAAAAAAAAB9NinbfTYp/302Kf99Nin/fTYp/302KeZ9Nik7fTYp0302Kf99Nin/fTYp/302
        Kf99NinTfTYpNn02Kd59Nin/fTYp/302Kf99Nin/fTYpyX02KQ59NikAAAAAAAAAAAB9NinbfTYp/302
        Kf99Nin/fTYp/302KeZ9Nik7fTYp0302Kf99Nin/fTYp/302Kf99NinTfTYpNn02Kd59Nin/fTYp/302
        Kf99Nin/fTYpyX02KQ59NikAAAAAAAAAAAB9NinbfTYp/302Kf99Nin/fTYp/302KeZ9Nik7fTYp0302
        Kf99Nin/fTYp/302Kf99NinTfTYpNn02Kd59Nin/fTYp/302Kf99Nin/fTYpyX02KQ59NikAAAAAAAAA
        AAB9NinSfTYp9302KfV9Nin1fTYp9n02Kd19Nik5fTYpyn02Kfh9Nin1fTYp9X02Kfh9NinLfTYpM302
        KdZ9Nin3fTYp9X02KfV9Nin4fTYpwX02KQ59NikAAAAAAAAAAAB9Nik5fTYpQ302KUN9NilDfTYpQ302
        KTx9NikQfTYpN302KUR9NilDfTYpQ302KUR9Nik3ezguDnk6MTp5OjFDeToxQ3k6MUN5OjFEeToxNXo5
        LwR6OS8AAAAAAAAAAAB9NimOfTYppn02KaV9NimlfTYpp302KZB9NikjfTYpiX02Kad9NimlfTYppX02
        Kad+NSeJRG6kIxuX/ZAclvynHJb8pRyW/KUclvyoHJb8fBuX/Qcbl/0AAAAAAAAAAAB9NinbfTYp/302
        Kf99Nin/fTYp/302Kd99Nik2fTYp0302Kf99Nin/fTYp/302Kf9+NSfTRW2iNh2V+N4elPf/HpT3/x6U
        9/8elPf/HpT3wB6U9wselPcAAAAAAAAAAAB9NinbfTYp/302Kf99Nin/fTYp/302Kd59Nik1fTYp0302
        Kf99Nin/fTYp/302Kf9+NSfTRW2iNh2V+N4elPf/HpT3/x6U9/8elPf/HpT3wB6U9wselPcAAAAAAAAA
        AAB9NinbfTYp/302Kf99Nin/fTYp/302Kd59Nik1fTYp0302Kf99Nin/fTYp/302Kf9+NSfTRW2iNh2V
        +N4elPf/HpT3/x6U9/8elPf/HpT3wB6U9wselPcAAAAAAAAAAAB9NinbfTYp/302Kf99Nin/fTYp/302
        Kd59Nik1fTYp0302Kf99Nin/fTYp/302Kf9+NSfTRW2iNh2V+N4elPf/HpT3/x6U9/8elPf/HpT3wB6U
        9wselPcAAAAAAAAAAAB9NinafTYp/302Kf99Nin/fTYp/302Kd59Nik1fTYp0302Kf99Nin/fTYp/302
        Kf9+NSfTRW2iNR2V+N4elPf/HpT3/x6U9/8elPf/HpT3wB6U9wselPcAAAAAAAAAAAB9NilSfTYpYH02
        KV99NilffTYpYH02KVN9NikUfTYpT302KWB9NilffTYpX302KWB+NSdPRW2iFB2V+FQelPdhHpT3YR6U
        92EelPdiHpT3SB6U9wQelPcAAAAAAAAAAAB9Nil5fTYpjn02KY19NimNfTYpjn02KXt9NikefTYpdX02
        KY99NimNfTYpjX02KY99Nil2fTYpDH02KQAAAAAAAAAAAB6U9wAelPcAHpT3CB6U9wMelPcAAAAAAAAA
        AAB9NinbfTYp/302Kf99Nin/fTYp/302Kd99Nik2fTYp0302Kf99Nin/fTYp/302Kf99NinVfTYpFn02
        KQAAAAAAHpT3AB6U9wAelPclHpT3pR6U91IelPcAHpT3AAAAAAB9NinbfTYp/302Kf99Nin/fTYp/302
        Kd59Nik1fTYp0302Kf99Nin/fTYp/302Kf99NinVfTYpFn02KQAelPcAHpT3AB6U9zQelPfHHpT3/x6U
        99selPc2HpT3AB6U9wB9NinbfTYp/302Kf99Nin/fTYp/302Kd59Nik1fTYp0302Kf99Nin/fTYp/302
        Kf99NinVfTYpFnU+OwAelPcAHpT3Rh6U99celPf/HpT3/x6U9/8elPfDHpT3Hx6U9wB9NinbfTYp/302
        Kf99Nin/fTYp/302Kd59Nik1fTYp0302Kf99Nin/fTYp/302Kf99NinVfTYpFkxmkwAelPdSHpT35R6U
        9/8elPf/HpT3/x6U9/8elPf/HpT3pR6U9xN9NinbfTYp/302Kf99Nin/fTYp/302Kd59Nik2fTYp0302
        Kf99Nin/fTYp/302Kf99NinVfTYpFkVuowAelPdZHpT38h6U9/8elPf/HpT3/x6U9/8elPf/HpT39h6U
        92t9NilofTYpen02KXl9Nil5fTYpen02KWl9NikZfTYpZH02KXp9Nil5fTYpeX02KXp9NillfTYpC1tY
        cwAelPcEHpT3fR6U9/oelPf/HpT3/x6U9/8elPf7HpT3nR6U9xwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAelPcAHpT3DB6U954elPf/HpT3/x6U
        9/YelPeHHpT3Dh6U9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAelPcAHpT3AB6U9xoelPe7HpT37x6U93AelPcHHpT3AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpT3AB6U
        9wAelPczHpT3WB6U9wUelPcAAAAAAAAAAAAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAA
        BwAAAAcAAAAHAAAABwAAAAcAAAAHAAAD5wAAA8cAAAODAAADAQAAAgAAAAIAAAACAAD//wEA//+DAP//
        xwA=
</value>
  </data>
</root>