<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        h8nJKBn/AlfrJfugYN6sAAAAAElFTkSuQmCC
</value>
  </data>
</root>