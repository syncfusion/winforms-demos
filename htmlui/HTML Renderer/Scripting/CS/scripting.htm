<html>
	<head>
		<title>Click Run script button to run the script</title>
		<style> #custom { font-size:11pt; width:90%; height:100px; border: solid 1 black; background-color:#c1c8db; color:#333367; text-align:center; }
	.ps { font-size:8pt; color:#999999; }
	</style>
	</head>
	<body bgColor="#ffffff">
		<h4>Scripting</h4>
		This document is self contained. The element events are handled through C# 
		script embedded in the HTML file itself. This allows for the program logic and 
		interface to be changed just by loading a new HTML (without having to recompile 
		the assembly).
		<p />
		<input type="text" id="btn" value="Smiley :-) through scripting." size="30" NAME="btn">&nbsp;
		<p />
		<input style="color:maroon; background-color:#c0c6dc;" type="button" value="Run Script" id="txt" NAME="txt">
		<p />
		<span id="custom">Press 'Run Script'.</span>
		<script language="C#">
		
		
using System;
using System.IO;
using System.Xml;
using System.Windows.Forms;
using System.Drawing;
using System.Collections;
using Syncfusion.Windows.Forms.HTMLUI;

namespace Syncfusion
{
public class Script
{
  		IHTMLElement txtText   = null;
  		IHTMLElement btnRun    = null;
  		IHTMLElement elmCustom = null;
  		
  		private const string DEF_IMG_TAG = "<img src='smile.bmp'>";
  		private const string DEF_SMILE = ":-)";
  		
  		/* Initializes script.*/
  		public static Script OnScriptStart()
  		{
  			return new Script();
  		}
  		
  		public Script()
  		{
  		  if( Global.Document == null )
  		  {
  			MessageBox.Show( "Document is NULL" );
  			return;
  		  }
  		  txtText   = Global.Document.GetElementByUserId( "btn" );
  		  btnRun    = Global.Document.GetElementByUserId( "txt" );
  		  elmCustom = Global.Document.GetElementByUserId( "custom" );
  		  
  		  btnRun.Click += new EventHandler( CScustom_Run );
  		}
  		
  		/* Runs when button is pressed. */
  		public void CScustom_Run( object sender, EventArgs args )
  		{
  		  if( elmCustom == null )  return;
  		  
  		  INPUTElementImpl txtElm = txtText as INPUTElementImpl;
  		  elmCustom.InnerHTML = txtElm.UserControl.CustomControl.Text.Replace(
  		   DEF_SMILE, DEF_IMG_TAG );
  		}
  		
}
}
		</script>
		<br>
		<br>
	</body>
</html>
