<?xml version="1.0" encoding="utf-8" ?>
<ArrayOfConfigLanguage>
<!--
xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="file://d:\Projects\EditControl\Syncfusion.Windows.Forms.Edit\config.xsd" -->
  <ConfigLanguage name="SQL" CaseInsensitive="true">
    <formats>
      <format name="Text" Font="Courier New, 10pt" FontColor="Black" />
      <format name="Whitespace" Font="Courier New, 10pt" FontColor="Black" />
      <format name="KeyWord" Font="Courier New, 10pt" FontColor="Blue" />
      <format name="String" Font="Courier New, 10pt, style=Bold" FontColor="DarkKhaki" />
      <format name="Number" Font="Courier New, 10pt, style=Bold" FontColor="Navy" />
      <format name="Operator" Font="Courier New, 10pt, style=Bold" FontColor="Salmon" />
      <format name="Comment" Font="Courier New, 10pt, style=Bold" FontColor="Green" />
      <format name="PreprocessorKeyword" Font="Courier New, 10pt" FontColor="Gray" />
      <format name="SelectedText" Font="Courier New, 10pt" BackColor="Highlight" FontColor="HighlightText" />
      <format name="CommentXML" Font="Courier New, 10pt, style=Bold" FontColor="Gray" />
      <format name="CollapsedText" Font="Courier New, 10pt" FontColor="Black" BackColor="White"/>
    </formats>
    <extensions>
    <extension>txt</extension>
    <extension>log</extension>
    </extensions>
    <lexems>
      <lexem BeginBlock="(" Type="Operator" />
      <lexem BeginBlock=")" Type="Operator" />
      <lexem BeginBlock="'" Type="Operator" />
      <lexem BeginBlock="%" Type="Operator" />
      <lexem BeginBlock="#" Type="Operator" />
      <lexem BeginBlock="@" Type="Operator" />
      <lexem BeginBlock="[" Type="Operator" />
      <lexem BeginBlock="]" Type="Operator" />
      <lexem BeginBlock="&quot;" Type="Operator" />
      <lexem BeginBlock="|" Type="Operator" />
      <lexem BeginBlock="=" Type="Operator" />
      <lexem BeginBlock=":=" Type="Operator" />
      <lexem BeginBlock="*" Type="Operator" />
      <lexem BeginBlock="." Type="Operator" />
      <lexem BeginBlock="," Type="Operator" />
      <lexem BeginBlock=";" Type="Operator" />
      <lexem BeginBlock="--" Type="Operator" />
      <lexem BeginBlock="&lt;" Type="Operator" />
      <lexem BeginBlock="&gt;" Type="Operator" />
	  <lexem BeginBlock="group" Type="KeyWord" />
	  <lexem BeginBlock="operator" Type="KeyWord" />
	  <lexem BeginBlock="delete" Type="KeyWord" />
      <lexem BeginBlock="from" Type="KeyWord" />
      <lexem BeginBlock="where" Type="KeyWord" />
      <lexem BeginBlock="select" Type="KeyWord" />
      <lexem BeginBlock="absolute" Type="KeyWord" />
      <lexem BeginBlock="action" Type="KeyWord" />
      <lexem BeginBlock="connection" Type="KeyWord" />
      <lexem BeginBlock="begin" Type="KeyWord" />
      <lexem BeginBlock="both" Type="KeyWord" />
      <lexem BeginBlock="else" Type="KeyWord" />
      <lexem BeginBlock="end" Type="KeyWord" />
      <lexem BeginBlock="function" Type="KeyWord" />
      <lexem BeginBlock="each" Type="KeyWord" />
      <lexem BeginBlock="distinct" Type="KeyWord" />
      <lexem BeginBlock="goto" Type="KeyWord" />
      <lexem BeginBlock="table" Type="KeyWord" />
      <lexem BeginBlock="rows" Type="KeyWord" />
      <lexem BeginBlock="search" Type="KeyWord" />
      <lexem BeginBlock="modify" Type="KeyWord" />
      <lexem BeginBlock="return" Type="KeyWord" />
      <lexem BeginBlock="boolean" Type="KeyWord" />
      <lexem BeginBlock="varchar" Type="KeyWord" />
      <lexem BeginBlock="varchar2" Type="KeyWord" />
      <lexem BeginBlock="declare" Type="KeyWord" />
      <lexem BeginBlock="cursor" Type="KeyWord" />
      <lexem BeginBlock="loop" Type="KeyWord" />
      <lexem BeginBlock="in" Type="KeyWord" />
      <lexem BeginBlock="is" Type="KeyWord" />
      <lexem BeginBlock="true" Type="KeyWord" />
      <lexem BeginBlock="false" Type="KeyWord" />
      <lexem BeginBlock="when" Type="KeyWord" />
      <lexem BeginBlock="exceptions" Type="KeyWord" />
      <lexem BeginBlock="others" Type="KeyWord" />
      <lexem BeginBlock="then" Type="KeyWord" />
      <lexem BeginBlock="and" Type="KeyWord" />
      <lexem BeginBlock="not" Type="KeyWord" />
      <lexem BeginBlock="for" Type="KeyWord" />
      <lexem BeginBlock="next" Type="KeyWord" />
      <lexem BeginBlock="if" Type="KeyWord" />
      <lexem BeginBlock="#region" EndBlock="#end region" Type="PreprocessorKeyword" IsEndRegex="true"
        IsComplex="true" IsCollapsable="true" AutoNameExpression="\s*(?&lt;text>.*).*\n" AutoNameTemplate="${text} "
        IsCollapseAutoNamed="true" CollapseName="#region">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="#Region" EndBlock="#End Region" Type="PreprocessorKeyword" IsEndRegex="true" 
        IsComplex="true" IsCollapsable="true" AutoNameExpression="\s*(?&lt;text>.*).*\n" AutoNameTemplate="${text} " 
        IsCollapseAutoNamed="true" CollapseName="#Region"> 
        <SubLexems> 
          <lexem BeginBlock="\n" IsBeginRegex="true" /> 
        </SubLexems>
      </lexem>
      <lexem BeginBlock="&quot;" EndBlock="&quot;" Type="String" IsComplex="true" OnlyLocalSublexems="true">
        <SubLexems>
          <lexem BeginBlock="\" EndBlock="&quot;" Type="String" />
        </SubLexems>
      </lexem>
    </lexems>
    <splits>
	  <split>:=</split>
	  <split>--</split>
	  <split>#region</split>
      <split>#end region</split>
      <split>#Region</split> 
      <split>#End Region</split>
    </splits>
  </ConfigLanguage>
  <ConfigLanguage name="VB.NET" CaseInsensitive="true">
    <formats>
      <format name="Text" Font="Courier New, 10pt" FontColor="Black" />
      <format name="Whitespace" Font="Courier New, 10pt" FontColor="Black" />
      <format name="KeyWord" Font="Courier New, 10pt" FontColor="Blue" />
      <format name="String" Font="Courier New, 10pt, style=Bold" FontColor="Red" />
      <format name="Number" Font="Courier New, 10pt, style=Bold" FontColor="Navy" />
      <format name="Operator" Font="Courier New, 10pt" FontColor="DarkCyan" />
      <format name="Comment" Font="Courier New, 10pt, style=Bold" FontColor="Green" />
      <format name="PreprocessorKeyword" Font="Courier New, 10pt" FontColor="Gray" />
      <format name="SelectedText" Font="Courier New, 10pt" BackColor="Highlight" FontColor="HighlightText" />
      <format name="CommentXML" Font="Courier New, 10pt, style=Bold" FontColor="Gray" />
      <format name="CollapsedText" Font="Courier New, 10pt" FontColor="Black" BackColor="White"
        ForeColor="Gray" />
    </formats>
    <extensions>
      <extension>vb</extension>
    </extensions>
    <lexems>
      <lexem BeginBlock="=" Type="Operator" />
      <lexem BeginBlock="+" Type="Operator" />
      <lexem BeginBlock="-" Type="Operator" />
      <lexem BeginBlock="/" Type="Operator" />
      <lexem BeginBlock="*" Type="Operator" />
      <lexem BeginBlock=";" Type="Operator" />
      <lexem BeginBlock=":" Type="Operator" />
      <lexem BeginBlock="." Type="Operator" />
      <lexem BeginBlock="," Type="Operator" />
      <lexem BeginBlock="^" Type="Operator" />

      <lexem BeginBlock="AddHandler" Type="KeyWord" />
      <lexem BeginBlock="AddressOf" Type="KeyWord" />
      <lexem BeginBlock="Alias" Type="KeyWord" />
      <lexem BeginBlock="And" Type="KeyWord" />
      <lexem BeginBlock="AndAlso" Type="KeyWord" />
      <lexem BeginBlock="Ansi" Type="KeyWord" />
      <lexem BeginBlock="As" Type="KeyWord" />
      <lexem BeginBlock="Assembly" Type="KeyWord" />
      <lexem BeginBlock="Auto" Type="KeyWord" />
      <lexem BeginBlock="Boolean" Type="KeyWord" />
      <lexem BeginBlock="ByRef" Type="KeyWord" />
      <lexem BeginBlock="Byte" Type="KeyWord" />
      <lexem BeginBlock="ByVal" Type="KeyWord" />
      <lexem BeginBlock="Call" Type="KeyWord" />
      <lexem BeginBlock="Case" Type="KeyWord" />
      <lexem BeginBlock="CBool" Type="KeyWord" />
      <lexem BeginBlock="CByte" Type="KeyWord" />
      <lexem BeginBlock="CChar" Type="KeyWord" />
      <lexem BeginBlock="CDate" Type="KeyWord" />
      <lexem BeginBlock="CDbl" Type="KeyWord" />
      <lexem BeginBlock="CDec" Type="KeyWord" />
      <lexem BeginBlock="Char" Type="KeyWord" />
      <lexem BeginBlock="CInt" Type="KeyWord" />
      <lexem BeginBlock="Class" Type="KeyWord" />
      <lexem BeginBlock="CLng" Type="KeyWord" />
      <lexem BeginBlock="CObj" Type="KeyWord" />
      <lexem BeginBlock="Const" Type="KeyWord" />
      <lexem BeginBlock="CShort" Type="KeyWord" />
      <lexem BeginBlock="CSng" Type="KeyWord" />
      <lexem BeginBlock="CStr" Type="KeyWord" />
      <lexem BeginBlock="CType" Type="KeyWord" />
      <lexem BeginBlock="Date" Type="KeyWord" />
      <lexem BeginBlock="Decimal" Type="KeyWord" />
      <lexem BeginBlock="Declare" Type="KeyWord" />
      <lexem BeginBlock="Default" Type="KeyWord" />
      <lexem BeginBlock="Delegate" Type="KeyWord" />
      <lexem BeginBlock="Dim" Type="KeyWord" />
      <lexem BeginBlock="DirectCast" Type="KeyWord" />
      <lexem BeginBlock="Do" Type="KeyWord" />
      <lexem BeginBlock="Double" Type="KeyWord" />
      <lexem BeginBlock="Each" Type="KeyWord" />
      <lexem BeginBlock="Else" Type="KeyWord" />
      <lexem BeginBlock="ElseIf" Type="KeyWord" />
      <lexem BeginBlock="Enum" Type="KeyWord" />
      <lexem BeginBlock="Erase" Type="KeyWord" />
      <lexem BeginBlock="Error" Type="KeyWord" />
      <lexem BeginBlock="Event" Type="KeyWord" />
      <lexem BeginBlock="Exit" Type="KeyWord" />
      <lexem BeginBlock="False" Type="KeyWord" />
      <lexem BeginBlock="For" Type="KeyWord" />
      <lexem BeginBlock="Friend" Type="KeyWord" />
      <lexem BeginBlock="Get" Type="KeyWord" />
      <lexem BeginBlock="GetType" Type="KeyWord" />
      <lexem BeginBlock="GoSub" Type="KeyWord" />
      <lexem BeginBlock="GoTo" Type="KeyWord" />
      <lexem BeginBlock="Handles" Type="KeyWord" />
      <lexem BeginBlock="Implements" Type="KeyWord" />
      <lexem BeginBlock="Imports" Type="KeyWord" />
      <lexem BeginBlock="In" Type="KeyWord" />
      <lexem BeginBlock="Inherits" Type="KeyWord" />
      <lexem BeginBlock="Integer" Type="KeyWord" />
      <lexem BeginBlock="Interface" Type="KeyWord" />
      <lexem BeginBlock="Is" Type="KeyWord" />
      <lexem BeginBlock="Let" Type="KeyWord" />
      <lexem BeginBlock="Lib" Type="KeyWord" />
      <lexem BeginBlock="Like" Type="KeyWord" />
      <lexem BeginBlock="Long" Type="KeyWord" />
      <lexem BeginBlock="Loop" Type="KeyWord" />
      <lexem BeginBlock="Me" Type="KeyWord" />
      <lexem BeginBlock="Mod" Type="KeyWord" />
      <lexem BeginBlock="Module" Type="KeyWord" />
      <lexem BeginBlock="MustInherit" Type="KeyWord" />
      <lexem BeginBlock="MustOverride" Type="KeyWord" />
      <lexem BeginBlock="MyBase" Type="KeyWord" />
      <lexem BeginBlock="MyClass" Type="KeyWord" />
      <lexem BeginBlock="Namespace" Type="KeyWord" />
      <lexem BeginBlock="New" Type="KeyWord" />
      <lexem BeginBlock="Next" Type="KeyWord" />
      <lexem BeginBlock="Not" Type="KeyWord" />
      <lexem BeginBlock="Nothing" Type="KeyWord" />
      <lexem BeginBlock="NotInheritable" Type="KeyWord" />
      <lexem BeginBlock="NotOverridable" Type="KeyWord" />
      <lexem BeginBlock="Object" Type="KeyWord" />
      <lexem BeginBlock="On" Type="KeyWord" />
      <lexem BeginBlock="Option" Type="KeyWord" />
      <lexem BeginBlock="Optional" Type="KeyWord" />
      <lexem BeginBlock="Or" Type="KeyWord" />
      <lexem BeginBlock="OrElse" Type="KeyWord" />
      <lexem BeginBlock="Overloads" Type="KeyWord" />
      <lexem BeginBlock="Overridable" Type="KeyWord" />
      <lexem BeginBlock="Overrides" Type="KeyWord" />
      <lexem BeginBlock="ParamArray" Type="KeyWord" />
      <lexem BeginBlock="Preserve" Type="KeyWord" />
      <lexem BeginBlock="Private" Type="KeyWord" />
      <lexem BeginBlock="Property" Type="KeyWord" />
      <lexem BeginBlock="Protected" Type="KeyWord" />
      <lexem BeginBlock="Public" Type="KeyWord" />
      <lexem BeginBlock="RaiseEvent" Type="KeyWord" />
      <lexem BeginBlock="ReadOnly" Type="KeyWord" />
      <lexem BeginBlock="ReDim" Type="KeyWord" />
      <lexem BeginBlock="RemoveHandler" Type="KeyWord" />
      <lexem BeginBlock="Resume" Type="KeyWord" />
      <lexem BeginBlock="Return" Type="KeyWord" />
      <lexem BeginBlock="Select" Type="KeyWord" />
      <lexem BeginBlock="Set" Type="KeyWord" />
      <lexem BeginBlock="Shadows" Type="KeyWord" />
      <lexem BeginBlock="Shared" Type="KeyWord" />
      <lexem BeginBlock="Short" Type="KeyWord" />
      <lexem BeginBlock="Single" Type="KeyWord" />
      <lexem BeginBlock="Static" Type="KeyWord" />
      <lexem BeginBlock="Step" Type="KeyWord" />
      <lexem BeginBlock="Stop" Type="KeyWord" />
      <lexem BeginBlock="String" Type="KeyWord" />
      <lexem BeginBlock="Structure" Type="KeyWord" />
      <lexem BeginBlock="SyncLock" Type="KeyWord" />
      <lexem BeginBlock="Then" Type="KeyWord" />
      <lexem BeginBlock="Throw" Type="KeyWord" />
      <lexem BeginBlock="To" Type="KeyWord" />
      <lexem BeginBlock="True" Type="KeyWord" />
      <lexem BeginBlock="TypeOf" Type="KeyWord" />
      <lexem BeginBlock="Unicode" Type="KeyWord" />
      <lexem BeginBlock="Until" Type="KeyWord" />
      <lexem BeginBlock="Variant" Type="KeyWord" />
      <lexem BeginBlock="Wend" Type="KeyWord" />
      <lexem BeginBlock="When" Type="KeyWord" />
      <lexem BeginBlock="While" Type="KeyWord" />
      <lexem BeginBlock="With" Type="KeyWord" />
      <lexem BeginBlock="WithEvents" Type="KeyWord" />
      <lexem BeginBlock="WriteOnly" Type="KeyWord" />
      <lexem BeginBlock="Xor" Type="KeyWord" />

      <lexem BeginBlock="begin" EndBlock="end" Type="KeyWord" IsComplex="true" IsCollapsable="true"
        CollapseName="begin..end" >
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
          <lexem ID="777" Priority="2" BeginBlock="[&lt;&gt;]" Type="Operator" IsBeginRegex="true"/>
        </SubLexems>
      </lexem>
      <lexem BeginBlock="'" EndBlock="\n" IsEndRegex="true" Type="Comment" IsComplex="true" OnlyLocalSublexems="true" />
      <lexem BeginBlock="try" EndBlock="end" Type="KeyWord" IsComplex="true" IsCollapsable="true"
        CollapseName="{Try Block}">
        <References>
          <reference RefID="777"/>
        </References>
        <SubLexems>
          <lexem BeginBlock="except" Type="KeyWord" />
          <lexem BeginBlock="finally" Type="KeyWord" />
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="(" EndBlock=")" Type="Operator" IsComplex="true" IsCollapsable="false"
       CollapseName="(...)">
        <References>
          <reference RefID="777"/>
        </References>
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="[" EndBlock="]" Type="Operator" IsComplex="true" />
      <lexem BeginBlock="&lt;" EndBlock="&gt;" Type="Operator" IsComplex="true" />
      <lexem BeginBlock='"' ContinueBlock=".*" EndBlock='"' IsContinueRegex="true" Type="String" OnlyLocalSublexems="true"
        IsComplex="true"/>
      <lexem BeginBlock="\'|REM" EndBlock="\n" IsBeginRegex="true" IsEndRegex="true" Type="Comment" OnlyLocalSublexems="true"
        IsComplex="true" />
      <lexem BeginBlock="\s" IsBeginRegex="true" Type="Whitespace" />
      <lexem BeginBlock="[0-9]+" IsBeginRegex="true" Type="Number" />
      <lexem BeginBlock="$" EndBlock="^[0-9a-fA-F]+$" IsEndRegex="true" Type="Number" />
      <lexem BeginBlock="#Region" EndBlock="#End Region" Type="PreprocessorKeyword" IsEndRegex="false"
        IsComplex="true" IsCollapsable="true" AutoNameExpression='(#region)\s*"(?&lt;text>.*)".*(?&lt;!\n)\n' AutoNameTemplate="${text}"
        IsCollapseAutoNamed="true" CollapseName="Unnamed Region" >
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="If" EndBlock="End If" Type="KeyWord" IsComplex="true" IsCollapsable="true" Indent="true"
        CollapseName="{If...End If}">
        <References>
          <reference RefID="777"/>
        </References>
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="Sub" EndBlock="End Sub" Type="KeyWord" IsComplex="true" IsCollapsable="true" Indent="true"
        CollapseName="{Sub...End Sub}" AutoNameExpression='.*Sub.*\s+(?&lt;text>\w+)\s*\(' AutoNameTemplate="Sub [${text}]"
        IsCollapseAutoNamed="true" ContentDivider="true">
        <References>
          <reference RefID="777"/>
        </References>
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="Function" EndBlock="End Function" Type="KeyWord" IsComplex="true" IsCollapsable="true" Indent="true"
        CollapseName="{Function...End Function}" AutoNameExpression='.*Function.*\s+(?&lt;text>\w+)\s*\(' AutoNameTemplate="Function [${text}]"
        IsCollapseAutoNamed="true" ContentDivider="true" >
        <References>
          <reference RefID="777"/>
        </References>
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
    </lexems>
    <splits>
      <split>@&quot;</split>
      <split>(*</split>
      <split>*)</split>
      <split>//</split>
      <split>'</split>
      <split>///</split>
      <split>#Region</split>
      <split>#End Region</split>
      <split>End If</split>
      <split>Else If</split>
      <split>End Sub</split>
      <split>End Function</split>
    </splits>
  </ConfigLanguage>
  <ConfigLanguage name="CustomLanguage">
    <formats>
      <format name="Text" Font="Courier New, 10pt" FontColor="Black" />
      <format name="Whitespace" Font="Courier New, 10pt" FontColor="Black" />
      <format name="KeyWord" Font="Courier New, 10pt" FontColor="Blue" />
      <format name="String" Font="Courier New, 10pt, style=Bold" FontColor="Red" />
      <format name="Number" Font="Courier New, 10pt, style=Bold" FontColor="Navy" />
      <format name="Operator" Font="Courier New, 10pt" FontColor="DarkCyan" />
      <format name="Comment" Font="Courier New, 10pt, style=Bold" FontColor="Green" />
      <format name="PreprocessorKeyword" Font="Courier New, 10pt" FontColor="Gray" />
      <format name="SelectedText" Font="Courier New, 10pt" BackColor="Highlight" FontColor="HighlightText" />
      <format name="CommentXML" Font="Courier New, 10pt, style=Bold" FontColor="Gray" />
      <format name="CollapsedText" Font="Courier New, 10pt" FontColor="Gray" BackColor="White"
        ForeColor="Gray" />
    </formats>
    <extensions>
      <extension>cs</extension>
      <extension>log</extension>
      <extension>dat</extension>
    </extensions>
    <lexems>
      <lexem BeginBlock="=" Type="Operator" />
      <lexem BeginBlock="+" Type="Operator" />
      <lexem BeginBlock="-" Type="Operator" />
      <lexem BeginBlock="/" Type="Operator" />
      <lexem BeginBlock="*" Type="Operator" />
      <lexem BeginBlock="!=" Type="Operator" />
      <lexem BeginBlock="==" Type="Operator" />
      <lexem BeginBlock="-=" Type="Operator" />
      <lexem BeginBlock="+=" Type="Operator" />
      <lexem BeginBlock="=-" Type="Operator" />
      <lexem BeginBlock="=+" Type="Operator" />
      <lexem BeginBlock="*=" Type="Operator" />
      <lexem BeginBlock="/=" Type="Operator" />
      <lexem BeginBlock="=*" Type="Operator" />
      <lexem BeginBlock="=/" Type="Operator" />
      <lexem BeginBlock="++" Type="Operator" />
      <lexem BeginBlock="--" Type="Operator" />
      <lexem BeginBlock=";" Type="Operator" />
      <lexem BeginBlock=":" Type="Operator" />
      <lexem BeginBlock="." Type="Operator" />
      <lexem BeginBlock="," Type="Operator" />
      <lexem BeginBlock="abstract" Type="KeyWord" />
      <lexem BeginBlock="long" Type="KeyWord" />
      <lexem BeginBlock="as" Type="KeyWord" />
      <lexem BeginBlock="namespace" Type="KeyWord" />
      <lexem BeginBlock="base" Type="KeyWord" />
      <lexem BeginBlock="new" Type="KeyWord" />
      <lexem BeginBlock="bool" Type="KeyWord" />
      <lexem BeginBlock="null" Type="KeyWord" />
      <lexem BeginBlock="break" Type="KeyWord" />
      <lexem BeginBlock="object" Type="KeyWord" />
      <lexem BeginBlock="byte" Type="KeyWord" />
      <lexem BeginBlock="operator" Type="KeyWord" />
      <lexem BeginBlock="case" Type="KeyWord" />
      <lexem BeginBlock="out" Type="KeyWord" />
      <lexem BeginBlock="catch" Type="KeyWord" />
      <lexem BeginBlock="override" Type="KeyWord" />
      <lexem BeginBlock="char" Type="KeyWord" />
      <lexem BeginBlock="params" Type="KeyWord" />
      <lexem BeginBlock="checked" Type="KeyWord" />
      <lexem BeginBlock="private" Type="KeyWord" />
      <lexem BeginBlock="class" Type="KeyWord" />
      <lexem BeginBlock="protected" Type="KeyWord" />
      <lexem BeginBlock="const" Type="KeyWord" />
      <lexem BeginBlock="public" Type="KeyWord" />
      <lexem BeginBlock="continue" Type="KeyWord" />
      <lexem BeginBlock="readonly" Type="KeyWord" />
      <lexem BeginBlock="decimal" Type="KeyWord" />
      <lexem BeginBlock="ref" Type="KeyWord" />
      <lexem BeginBlock="default" Type="KeyWord" />
      <lexem BeginBlock="return" Type="KeyWord" />
      <lexem BeginBlock="delegate" Type="KeyWord" />
      <lexem BeginBlock="sbyte" Type="KeyWord" />
      <lexem BeginBlock="do" Type="KeyWord" />
      <lexem BeginBlock="sealed" Type="KeyWord" />
      <lexem BeginBlock="double" Type="KeyWord" />
      <lexem BeginBlock="short" Type="KeyWord" />
      <lexem BeginBlock="else" Type="KeyWord" />
      <lexem BeginBlock="sizeof" Type="KeyWord" />
      <lexem BeginBlock="enum" Type="KeyWord" />
      <lexem BeginBlock="stackalloc" Type="KeyWord" />
      <lexem BeginBlock="event" Type="KeyWord" />
      <lexem BeginBlock="static" Type="KeyWord" />
      <lexem BeginBlock="explicit" Type="KeyWord" />
      <lexem BeginBlock="string" Type="KeyWord" />
      <lexem BeginBlock="extern" Type="KeyWord" />
      <lexem BeginBlock="struct" Type="KeyWord" />
      <lexem BeginBlock="false" Type="KeyWord" />
      <lexem BeginBlock="switch" Type="KeyWord" />
      <lexem BeginBlock="finally" Type="KeyWord" />
      <lexem BeginBlock="this" Type="KeyWord" />
      <lexem BeginBlock="fixed" Type="KeyWord" />
      <lexem BeginBlock="throw" Type="KeyWord" />
      <lexem BeginBlock="float" Type="KeyWord" />
      <lexem BeginBlock="true" Type="KeyWord" />
      <lexem BeginBlock="for" Type="KeyWord" />
      <lexem BeginBlock="try" Type="KeyWord" />
      <lexem BeginBlock="foreach" Type="KeyWord" />
      <lexem BeginBlock="typeof" Type="KeyWord" />
      <lexem BeginBlock="goto" Type="KeyWord" />
      <lexem BeginBlock="uint" Type="KeyWord" />
      <lexem BeginBlock="if" Type="KeyWord" />
      <lexem BeginBlock="ulong" Type="KeyWord" />
      <lexem BeginBlock="implicit" Type="KeyWord" />
      <lexem BeginBlock="unchecked" Type="KeyWord" />
      <lexem BeginBlock="in" Type="KeyWord" />
      <lexem BeginBlock="unsafe" Type="KeyWord" />
      <lexem BeginBlock="int" Type="KeyWord" />
      <lexem BeginBlock="ushort" Type="KeyWord" />
      <lexem BeginBlock="interface" Type="KeyWord" />
      <lexem BeginBlock="using" Type="KeyWord" />
      <lexem BeginBlock="internal" Type="KeyWord" />
      <lexem BeginBlock="virtual" Type="KeyWord" />
      <lexem BeginBlock="is" Type="KeyWord" />
      <lexem BeginBlock="void" Type="KeyWord" />
      <lexem BeginBlock="lock" Type="KeyWord" />
      <lexem BeginBlock="while" Type="KeyWord" />
      <lexem BeginBlock="get" Type="KeyWord" />
      <lexem BeginBlock="set" Type="KeyWord" />
      <lexem BeginBlock="add" Type="KeyWord" />
      <lexem BeginBlock="remove" Type="KeyWord" />
      <lexem BeginBlock="/*" EndBlock="*/" Type="Comment" OnlyLocalSublexems="true" IsComplex="true"
        IsCollapsable="true" CollapseName="/*...*/">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="(" EndBlock=")" Type="Operator" IsComplex="true" IsCollapsable="false"
        CollapseName="(...)">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="&quot;" EndBlock="&quot;" Type="String" IsComplex="true" OnlyLocalSublexems="true">
        <SubLexems>
          <lexem BeginBlock="\" EndBlock="&quot;" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="'" EndBlock="'" Type="String" IsComplex="true" OnlyLocalSublexems="true">
        <SubLexems>
          <lexem BeginBlock="\" EndBlock=".+" IsEndRegex="true" Priority="2" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="@&quot;" EndBlock="&quot;" Type="String" OnlyLocalSublexems="true" IsComplex="true">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
          <lexem BeginBlock="&quot;" EndBlock="&quot;" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="[" EndBlock="]" Type="Operator" IsComplex="true" IsCollapsable="false"
        CollapseName="[...]">
        <SubLexems>
          <lexem BeginBlock="\" EndBlock="&quot;" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="//" EndBlock="\n" IsEndRegex="true" Type="Comment" IsComplex="true"
        OnlyLocalSublexems="true" />
      <lexem BeginBlock="#region" EndBlock="#end region" Type="PreprocessorKeyword" IsEndRegex="true"
        IsComplex="true" IsCollapsable="true" AutoNameExpression="\s*(?&lt;text>.*).*\n" AutoNameTemplate="${text} "
        IsCollapseAutoNamed="true" CollapseName="#region">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="#Region" EndBlock="#End Region" Type="PreprocessorKeyword" IsEndRegex="true"
        IsComplex="true" IsCollapsable="true" AutoNameExpression="\s*(?&lt;text>.*).*\n" AutoNameTemplate="${text} "
        IsCollapseAutoNamed="true" CollapseName="#Region">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="\s" IsBeginRegex="true" Type="Whitespace" />
      <lexem BeginBlock="///" EndBlock="\n" IsEndRegex="true" Type="Comment" OnlyLocalSublexems="true"
        IsComplex="true">
        <SubLexems>
          <lexem BeginBlock="&lt;" EndBlock=">" Type="Custom" FormatName="CommentXML" IsComplex="true"
            OnlyLocalSublexems="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="[0-9]+" IsBeginRegex="true" Type="Number" />
      <lexem BeginBlock="{" EndBlock="}" Type="KeyWord" IsComplex="true" IsCollapsable="true" Indent="true"
        CollapseName="{...}">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
    </lexems>
    <splits>
      <split>@&quot;</split>
      <split>+=</split>
      <split>/=</split>
      <split>=/</split>
      <split>*=</split>
      <split>=*</split>
      <split>==</split>
      <split>!=</split>
      <split>=+</split>
      <split>-=</split>
      <split>++</split>
      <split>-=</split>
      <split>=-</split>
      <split>--</split>
      <split>/*</split>
      <split>*/</split>
      <split>//</split>
      <split>#region</split>
      <split>#end region</split>
      <split>#Region</split>
      <split>#End Region</split>
      <split>///</split>
    </splits>
  </ConfigLanguage>
  <ConfigLanguage name="C#" Known="CSharp" StartComment="//" TriggersActivators=" ;.=()">
    <formats>
      <format name="Text" Font="Courier New, 10pt" FontColor="Black" />
      <format name="Whitespace" Font="Courier New, 10pt" FontColor="Black" />
      <format name="KeyWord" Font="Courier New, 10pt" FontColor="Blue" />
      <format name="ImageProcessor" Font="Courier New, 10pt" FontColor="Blue" UseCustomControl="true" />
      <format name="String" Font="Courier New, 10pt, style=Bold" FontColor="Red" BorderColor="Red" />
      <format name="Number" Font="Courier New, 10pt, style=Bold" FontColor="Navy" />
      <format name="Error" Font="Courier New, 10pt" FontColor="Black" underline="Wave" LineColor="Red" />
      <format name="Operator" Font="Courier New, 10pt" FontColor="DarkCyan" />
      <format name="Comment" Font="Courier New, 10pt, style=Bold" FontColor="Green" />
      <format name="PreprocessorKeyword" Font="Courier New, 10pt" FontColor="Gray" />
      <format name="SelectedText" Font="Courier New, 10pt" BackColor="Highlight" FontColor="HighlightText" />
      <format name="CommentXML" Font="Courier New, 10pt, style=Bold" FontColor="Gray" />
      <format name="CollapsedText" Font="Courier New, 10pt" FontColor="Black" BorderColor="Gray"
				BorderStyle="Solid" />
    </formats>
    <extensions>
      <extension>cs</extension>
    </extensions>
    <lexems>
      <lexem BeginBlock="=" Type="Operator" />
      <lexem BeginBlock="+" Type="Operator" />
      <lexem BeginBlock="-" Type="Operator" />
      <lexem BeginBlock="/" Type="Operator" />
      <lexem BeginBlock="*" Type="Operator" />
      <lexem BeginBlock="!=" Type="Operator" />
      <lexem BeginBlock="==" Type="Operator" />
      <lexem BeginBlock="-=" Type="Operator" />
      <lexem BeginBlock="+=" Type="Operator" />
      <lexem BeginBlock="=-" Type="Operator" />
      <lexem BeginBlock="=+" Type="Operator" />
      <lexem BeginBlock="*=" Type="Operator" />
      <lexem BeginBlock="/=" Type="Operator" />
      <lexem BeginBlock="=*" Type="Operator" />
      <lexem BeginBlock="=/" Type="Operator" />
      <lexem BeginBlock="++" Type="Operator" />
      <lexem BeginBlock="--" Type="Operator" />
      <lexem BeginBlock=";" Type="Operator" />
      <lexem BeginBlock=":" Type="Operator" />
      <lexem BeginBlock="." Type="Operator" DropContextChoiceList="true" />
      <lexem BeginBlock="," Type="Operator" />
      <lexem BeginBlock="abstract" Type="KeyWord" />
      <lexem BeginBlock="long" Type="KeyWord" />
      <lexem BeginBlock="as" Type="KeyWord" />
      <lexem BeginBlock="namespace" Type="KeyWord" />
      <lexem BeginBlock="base" Type="KeyWord" />
      <lexem BeginBlock="new" Type="KeyWord" />
      <lexem BeginBlock="bool" Type="KeyWord" />
      <lexem BeginBlock="null" Type="KeyWord" />
      <lexem BeginBlock="break" Type="KeyWord" />
      <lexem BeginBlock="object" Type="KeyWord" />
      <lexem BeginBlock="byte" Type="KeyWord" />
      <lexem BeginBlock="operator" Type="KeyWord" />
      <lexem BeginBlock="case" Type="KeyWord" />
      <lexem BeginBlock="out" Type="KeyWord" />
      <lexem BeginBlock="catch" Type="KeyWord" />
      <lexem BeginBlock="override" Type="KeyWord" />
      <lexem BeginBlock="char" Type="KeyWord" />
      <lexem BeginBlock="params" Type="KeyWord" />
      <lexem BeginBlock="checked" Type="KeyWord" />
      <lexem BeginBlock="private" Type="KeyWord" />
      <lexem BeginBlock="class" Type="KeyWord" />
      <lexem BeginBlock="protected" Type="KeyWord" />
      <lexem BeginBlock="const" Type="KeyWord" />
      <lexem BeginBlock="public" Type="KeyWord" />
      <lexem BeginBlock="continue" Type="KeyWord" />
      <lexem BeginBlock="readonly" Type="KeyWord" />
      <lexem BeginBlock="decimal" Type="KeyWord" />
      <lexem BeginBlock="ref" Type="KeyWord" />
      <lexem BeginBlock="default" Type="KeyWord" />
      <lexem BeginBlock="return" Type="KeyWord" />
      <lexem BeginBlock="delegate" Type="KeyWord" />
      <lexem BeginBlock="sbyte" Type="KeyWord" />
      <lexem BeginBlock="do" Type="KeyWord" />
      <lexem BeginBlock="sealed" Type="KeyWord" />
      <lexem BeginBlock="double" Type="KeyWord" />
      <lexem BeginBlock="short" Type="KeyWord" />
      <lexem BeginBlock="else" Type="KeyWord" />
      <lexem BeginBlock="sizeof" Type="KeyWord" />
      <lexem BeginBlock="enum" Type="KeyWord" />
      <lexem BeginBlock="stackalloc" Type="KeyWord" />
      <lexem BeginBlock="event" Type="KeyWord" />
      <lexem BeginBlock="static" Type="KeyWord" />
      <lexem BeginBlock="explicit" Type="KeyWord" />
      <lexem BeginBlock="string" Type="KeyWord" />
      <lexem BeginBlock="extern" Type="KeyWord" />
      <lexem BeginBlock="struct" Type="KeyWord" />
      <lexem BeginBlock="false" Type="KeyWord" />
      <lexem BeginBlock="switch" Type="KeyWord" />
      <lexem BeginBlock="finally" Type="KeyWord" />
      <lexem BeginBlock="this" Type="KeyWord" />
      <lexem BeginBlock="fixed" Type="KeyWord" />
      <lexem BeginBlock="throw" Type="KeyWord" />
      <lexem BeginBlock="float" Type="KeyWord" />
      <lexem BeginBlock="true" Type="KeyWord" />
      <lexem BeginBlock="for" Type="KeyWord" />
      <lexem BeginBlock="try" Type="KeyWord" />
      <lexem BeginBlock="foreach" Type="KeyWord" />
      <lexem BeginBlock="typeof" Type="KeyWord" />
      <lexem BeginBlock="goto" Type="KeyWord" />
      <lexem BeginBlock="uint" Type="KeyWord" />
      <lexem BeginBlock="if" Type="KeyWord" />
      <lexem BeginBlock="ulong" Type="KeyWord" />
      <lexem BeginBlock="implicit" Type="KeyWord" />
      <lexem BeginBlock="unchecked" Type="KeyWord" />
      <lexem BeginBlock="in" Type="KeyWord" />
      <lexem BeginBlock="unsafe" Type="KeyWord" />
      <lexem BeginBlock="int" Type="KeyWord" />
      <lexem BeginBlock="ushort" Type="KeyWord" />
      <lexem BeginBlock="interface" Type="KeyWord" />
      <lexem BeginBlock="using" Type="KeyWord" />
      <lexem BeginBlock="internal" Type="KeyWord" />
      <lexem BeginBlock="virtual" Type="KeyWord" />
      <lexem BeginBlock="is" Type="KeyWord" />
      <lexem BeginBlock="void" Type="KeyWord" />
      <lexem BeginBlock="lock" Type="KeyWord" />
      <lexem BeginBlock="while" Type="KeyWord" />
      <lexem BeginBlock="get" Type="KeyWord" />
      <lexem BeginBlock="set" Type="KeyWord" />
      <lexem BeginBlock="add" Type="KeyWord" />
      <lexem BeginBlock="remove" Type="KeyWord" />
      <lexem BeginBlock="*/" Type="Error" Priority="-10" />
      <lexem BeginBlock="/*" EndBlock="*/" Type="Comment" OnlyLocalSublexems="true" IsComplex="true"
				IsCollapsable="true" CollapseName="/*...*/" AllowTriggers="false">
        <SubLexems>
          <lexem BeginBlock="/*" Type="Comment" />
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock=")" Type="Error" Priority="-10" />
      <lexem BeginBlock="(" EndBlock=")" Type="Operator" IsComplex="true" IsCollapsable="false"
				CollapseName="(...)">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="&quot;" EndBlock="(&quot;)|(@&quot;)" Type="String" IsEndRegex="true"
				IsComplex="true" OnlyLocalSublexems="true" IndentationGuideline="true">
        <SubLexems>
          <lexem BeginBlock="\" EndBlock="&quot;" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="'" EndBlock="'" Type="String" IsComplex="true" OnlyLocalSublexems="true">
        <SubLexems>
          <lexem BeginBlock="\" EndBlock=".+" IsEndRegex="true" Priority="2" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="@&quot;" EndBlock="(&quot;)|(@&quot;)" Type="String" IsEndRegex="true"
				OnlyLocalSublexems="true" IsComplex="true">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
          <lexem BeginBlock="&quot;" EndBlock="&quot;" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="[" EndBlock="]" Type="Operator" IsComplex="true" IsCollapsable="false"
				CollapseName="[...]">
        <SubLexems>
          <lexem BeginBlock="\" EndBlock="&quot;" Type="String" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="//" EndBlock="\n" IsEndRegex="true" Type="Comment" IsComplex="true"
				OnlyLocalSublexems="true" AllowTriggers="false" />
      <lexem ID="1041" EndBlock="#endregion" Type="PreprocessorKeyword" IsComplex="true" IsCollapsable="true">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="#endregion" Type="Error" Priority="-10" />
      <lexem BeginBlock="#endif" Type="Error" Priority="-10" />
      <lexem BeginBlock="#else" Type="Error" Priority="-10" />
      <lexem ID="1044" EndBlock="#endif" Type="PreprocessorKeyword" IsComplex="true">
        <SubLexems>
          <lexem BeginBlock="#else" Type="PreprocessorKeyword" />
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="#region" EndBlock="\n" Type="PreprocessorKeyword" IsEndRegex="true"
				OnlyLocalSublexems="true" IsComplex="true" IsCollapsable="true" AutoNameExpression="(#region)\s*(?&lt;text>.*).*(?&lt;!\n)\n"
				AutoNameTemplate="${text}" IsCollapseAutoNamed="true" CollapseName="Unnamed Region"
				NextID="1041" IndentationGuideline="true">
        <SubLexems>
          <lexem BeginBlock=".*(?&lt;!\n)" IsBeginRegex="true" Type="Text" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="#if" EndBlock="\n" Type="PreprocessorKeyword" IsEndRegex="true" OnlyLocalSublexems="true"
				IsComplex="true" IsCollapsable="true" AutoNameExpression="(#if)\s*(?&lt;text>.*).*(?&lt;!\n)\n"
				AutoNameTemplate="If ${text}" IsCollapseAutoNamed="true" CollapseName="Incorrect if-def"
				NextID="1044">
        <SubLexems>
          <lexem BeginBlock=".*(?&lt;!\n)" IsBeginRegex="true" Type="Text" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="(\s(?&lt;!\n))+" IsBeginRegex="true" Type="Whitespace" />
      <lexem BeginBlock="///" EndBlock="\n" IsEndRegex="true" Type="Comment" OnlyLocalSublexems="true"
				IsComplex="true" AllowTriggers="false">
        <SubLexems>
          <lexem BeginBlock="&lt;" EndBlock=">" Type="Custom" FormatName="CommentXML" IsComplex="true"
						OnlyLocalSublexems="true" IndentationGuideline="true" />
        </SubLexems>
      </lexem>
      <lexem ID="1124" BeginBlock="[0-9]+" EndBlock=".*" IsPseudoEnd="true" IsEndRegex="true"
				IsBeginRegex="true" Type="Number" IsComplex="true" OnlyLocalSublexems="true">
        <SubLexems>
          <lexem BeginBlock="x" EndBlock="[0-9a-fA-F]+" IsEndRegex="true" Type="Number" Priority="5" />
          <lexem BeginBlock="." EndBlock="[0-9]+" IsEndRegex="true" Type="Number" Priority="5" />
        </SubLexems>
      </lexem>
      <lexem BeginBlock="}" Type="Error" Priority="-10" />
      <lexem ID="256" BeginBlock="{" EndBlock="}" Type="KeyWord" IsComplex="true" IsCollapsable="true"
				Indent="true" CollapseName="{...}" IndentationGuideline="true" AutoFormatStartNewLine="true">
        <SubLexems>
          <lexem BeginBlock="\n" IsBeginRegex="true" />
        </SubLexems>
      </lexem>
    </lexems>
    <splits>
      <split>@&quot;</split>
      <split>&lt;img</split>
      <split>/></split>
      <split>+=</split>
      <split>/=</split>
      <split>=/</split>
      <split>*=</split>
      <split>=*</split>
      <split>==</split>
      <split>!=</split>
      <split>=+</split>
      <split>-=</split>
      <split>++</split>
      <split>-=</split>
      <split>=-</split>
      <split>--</split>
      <split>/*</split>
      <split>*/</split>
      <split>//</split>
      <split>#if</split>
      <split>#endif</split>
      <split>#else</split>
      <split>#region</split>
      <split>#endregion</split>
      <split>///</split>
    </splits>
    <AutoReplaceTriggers>
      <AutoReplaceTrigger From="teh" To="the" />
      <AutoReplaceTrigger From="itn" To="int" />
    </AutoReplaceTriggers>
    <CodeSnippetsContainer>
      <CodeSnippetsContainer Name="Container 1">
        <CodeSnippetsContainer Name="Container11">
          <CodeSnippet Format="1.0.0">
            <Header>
              <Title>lock</Title>
              <Shortcut>lock</Shortcut>
              <Description>Code snippet for lock statement</Description>
              <Author>Microsoft Corporation</Author>
              <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
                <SnippetType>SurroundsWith</SnippetType>
              </SnippetTypes>
            </Header>
            <Snippet>
              <Declarations>
                <Literal>
                  <ID>expression</ID>
                  <ToolTip>Expression to evaluate</ToolTip>
                  <Default>this</Default>
                </Literal>
              </Declarations>
              <Code Language="csharp">
                <![CDATA[lock ($expression$)
	{
		$selected$ $end$
	}]]>
              </Code>
            </Snippet>
          </CodeSnippet>
          <CodeSnippet Format="1.0.0">
            <Header>
              <Title>namespace</Title>
              <Shortcut>namespace</Shortcut>
              <Description>Code snippet for namespace</Description>
              <Author>Microsoft Corporation</Author>
              <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
                <SnippetType>SurroundsWith</SnippetType>
              </SnippetTypes>
            </Header>
            <Snippet>
              <Declarations>
                <Literal>
                  <ID>name</ID>
                  <ToolTip>Namespace name</ToolTip>
                  <Default>MyNamespace</Default>
                </Literal>
              </Declarations>
              <Code Language="csharp">
                <![CDATA[namespace $name$
	{
		$selected$ $end$
	}]]>
              </Code>
            </Snippet>
          </CodeSnippet>
        </CodeSnippetsContainer>
        <CodeSnippet Format="1.0.0">
          <Header>
            <Title>for</Title>
            <Shortcut>for</Shortcut>
            <Description>Code snippet for 'for' loop</Description>
            <Author>Microsoft Corporation</Author>
            <SnippetTypes>
              <SnippetType>Expansion</SnippetType>
              <SnippetType>SurroundsWith</SnippetType>
            </SnippetTypes>
          </Header>
          <Snippet>
            <Declarations>
              <Literal>
                <ID>index</ID>
                <ToolTip>Index</ToolTip>
                <Default>i</Default>
              </Literal>
              <Literal>
                <ID>max</ID>
                <ToolTip>Max length</ToolTip>
                <Default>length</Default>
              </Literal>
            </Declarations>
            <Code Language="csharp">
              <![CDATA[for (int $index$ = 0; $index$ < $max$; $index$++)
			{
			$selected$ $end$
			}]]>
            </Code>
          </Snippet>
        </CodeSnippet>
      </CodeSnippetsContainer>
      <CodeSnippetsContainer Name="Container 2">
        <CodeSnippet Format="1.0.0">
          <Header>
            <Title>struct</Title>
            <Shortcut>struct</Shortcut>
            <Description>Code snippet for struct</Description>
            <Author>Microsoft Corporation</Author>
            <SnippetTypes>
              <SnippetType>Expansion</SnippetType>
              <SnippetType>SurroundsWith</SnippetType>
            </SnippetTypes>
          </Header>
          <Snippet>
            <Declarations>
              <Literal>
                <ID>name</ID>
                <ToolTip>Struct name</ToolTip>
                <Default>MyStruct</Default>
              </Literal>
            </Declarations>
            <Code Language="csharp">
              <![CDATA[struct $name$
	{
		$selected$$end$
	}]]>
            </Code>
          </Snippet>
        </CodeSnippet>
      </CodeSnippetsContainer>
      <CodeSnippet Format="1.0.0">
        <Header>
          <Title>if</Title>
          <Shortcut>if</Shortcut>
          <Description>Code snippet for if statement</Description>
          <Author>Microsoft Corporation</Author>
          <SnippetTypes>
            <SnippetType>Expansion</SnippetType>
            <SnippetType>SurroundsWith</SnippetType>
          </SnippetTypes>
        </Header>
        <Snippet>
          <Declarations>
            <Literal>
              <ID>expression</ID>
              <ToolTip>Expression to evaluate</ToolTip>
              <Default>true</Default>
            </Literal>
          </Declarations>
          <Code Language="csharp">
            <![CDATA[if ($expression$)
	{
		$selected$ $end$
	}]]>
          </Code>
        </Snippet>
      </CodeSnippet>
      <CodeSnippet Format="1.0.0">
        <Header>
          <Title>try</Title>
          <Shortcut>try</Shortcut>
          <Description>Code snippet for try catch</Description>
          <Author>Microsoft Corporation</Author>
          <SnippetTypes>
            <SnippetType>Expansion</SnippetType>
            <SnippetType>SurroundsWith</SnippetType>
          </SnippetTypes>
        </Header>
        <Snippet>
          <Declarations>
            <Literal>
              <ID>expression</ID>
              <ToolTip>Exception type</ToolTip>
            </Literal>
          </Declarations>
          <Code Language="csharp">
            <![CDATA[try 
	{	        
		$selected$
	}
	catch ($expression$)
	{
		$end$
		throw;
	}]]>
          </Code>
        </Snippet>
      </CodeSnippet>
    </CodeSnippetsContainer>
  </ConfigLanguage>
</ArrayOfConfigLanguage>